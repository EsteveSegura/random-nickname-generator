!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var a=r();for(var o in a)("object"==typeof exports?exports:e)[o]=a[o]}}(self,(()=>{return e={359:e=>{e.exports={DATA_SETS:{FRUITS:["Banana","Strawberry","Orange","Apple","Grape","Raspberry","Clementine","Pineapple","Kiwi","Apricot","Peach","Mango","Pear","Grapefruit","Currant","Lemon","Cherry"],ANIMALS:["Goat","Kitten","Dog","Dragon","Fox","Crocodile","Lion","Tiger","Tarantula","Rhinoceros","Pterodactyl","Ferret","Turtle","Dolphin","Eagle","Falcon","Giraffe"],FLOWERS:["Lilac","Rose","Tulip","Hyacinth","Sunflower","Daffodil","Lavender","Daisy","Orchid","Lily","Violet","Jasmine","Poppy","Pansy"],INSTRUMENTS:["Piano","Guitar","Accordion","Harmonica","Violin","Organ","Bass","Saxophone","Drum","Harp","Mandolin","Banjo","Trombone","Trumpet"],OBJECTS:["Chair","Desk","Table","Screen","Camera","Plate","Spoon","Fork","Knife","Bed","Blanket","Washbasin","Teddy","Pillow"],CLOTHES:["Watch","Tie","Hood","Belt","Bracelet","Necklace","Hat","Cap","Shoe","Mask","Glasses","Tatoo","Tanktop","Skirt","Dress","Suit"],BODY:["Belly","Navel","Face","Ear","Nose","Mouth","Lip","Pimple","Hair","Eye","Feet","Hand","Leg","Knee","Ankle","Cheek"],WEATHER:["Sun","Cloud","Morning","Night","Evening","Noon","Storm","Rain","Flash","Tempest","Tornado","Mist","Snow","Hail","Twilight","Dawn"],GAMES:["Game","Controller","Joystick","Card","Dice","Pawn","Computer","Cheat","Board","Score","Win","Lose","Draw","Role","Marble","Hearth","Spade","Diamond","Clover","As","Joker","Rule"],SPORTS:["Ball","Balloon","Racket","Basket","Race","Wheel","Field","Stadium","Room","Referee","Faute","Ban","Club"],JOBS:["Plumber","Firefighter","Doctor","Teacher","Postman","Singer","Dancer","Actor","Policeman","Streamer","Engineer","Liar","Trainer"],ADJECTIVES:["Cruel","Lovely","Confident","Robust","Dynamic","Brave","Calm","Sick","Sad","Wise","Wild","Clean","Crazy","Sneaky","Silly","Lucid","Leader"],VIDEO_GAMES:["Pikachu","Mario","Luigi","Yoshi","Charizard","Squirtle","Jigglypuff","Zelda","Bowser","Sonic"],MOVIE_GENRES:["Short","Drama","Comedy","Documentary","Adult","Action","Romance","Thriller","Animation","Family","Crime","Horror","Music","Adventure","Fantasy","Mystery","Biography","Sport","History","Musical","Western","War","Reality","News","Talkshow","Gameshow","Noir","Lifestyle","Experimental","Commercial"],ACTOR_NAME:["Harrison","Samuel","Morgan","Robert","Eddie","Tom","Johnny","Michael","Scarlett","Gary","Robin","Bruce","Stellan","Anthony","Ian","Will","Stanley","Matt","Cameron","Liam","Andy","Don","Ben","Helena","Orlando","Woody","Cate","Julia","Elizabeth","Ralph","Emma","Tommy","Brad","Adam","Daniel","Jonah","Owen","Idris","Bradley","Mark","Jim","Dustin","Leonardo","Jeremy","Philip","Sandra","Chris","Anne"],ACTOR_SURNAME:["Ford","Jackson","Freeman","Hanks","Downey","Murphy","Cruise","Depp","Caine","Johansson","Oldman","Williams","Willis","Skarsgard","Daniels","McKellen","Smith","Tucci","Damon","DeNiro","Diaz","Neeson","Serkis","Cheadle","Stiller","Bonham","Bloom","Harrelson","Blanchett","Roberts","Banks","Fiennes","Watson","Lee","Pitt","Sandler","Radcliffe","Hill","Wilson","Elba","Cooper","Wahlberg","Carrey","Hoffman","DiCaprio","Renner","Seymour","Bullock","Evans","Hathaway"]}}},564:e=>{class r extends Error{constructor(e){super(),this.message=e}}e.exports=r},853:e=>{class r extends Error{constructor(e){super(),this.message=e}}e.exports=r},138:(e,r,a)=>{const o=a(828),{DATA_SETS:n}=a(359);e.exports={DATA_SETS:n,RandomNicknameGenerator:new o}},828:(e,r,a)=>{const o=a(853),n=a(564),{randomInt:t,randomHex:i}=a(749);e.exports=class{generate({structure:e,separator:r="",randomHash:a=!1,timeStamp:o=!1,order:n=null}){const t=this._generateStructure({structure:e,separator:r});let l="";a&&(l=i(6));let s="";return o&&(s=(new Date).getTime()),this._parseOrder({order:n,structure:t,randomHash:l,timeStamp:s,separator:r})}_generateStructure({structure:e,separator:r=""}){if("string"!=typeof r)throw new n("Separator is not a string");if(!Array.isArray(e))throw new o("Invalid structure");if(0===e.length)throw new o("Empty structure");let a="";for(const[o,n]of e.entries()){const i=t({min:0,max:n.length-1}),l=o===e.length-1;a=a+n[i]+(l?"":r)}return a.trim()}_parseOrder({order:e,structure:r,randomHash:a=null,timeStamp:o=null,separator:n=null}){if(e){const r=e.split(":");r.shift();const a=arguments[0];return r.map((e=>a[e]?a[e]:e)).join(n)}return`${r}${a?n:""}${a}${o?n:""}${o}`}}},749:e=>{e.exports={randomInt:function({min:e=0,max:r=100}){return Math.floor(Math.random()*(r-e+1)+e)},randomHex:function(e){if("undefined"!=typeof window&&window.hasOwnProperty("Window")&&window instanceof window.Window){let r="";const a=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];for(let o=0;o<e;o++)r+=a[Math.floor(Math.random()*a.length)];return r}return crypto.randomBytes(e).toString("hex")}}}},r={},function a(o){var n=r[o];if(void 0!==n)return n.exports;var t=r[o]={exports:{}};return e[o](t,t.exports,a),t.exports}(138);var e,r}));